@{
    ViewBag.Title = "Product Units";
    ViewBag.pTitle = "Product Unit Management";
    ViewBag.pageTitle = "Product Units";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <h4 class="mb-sm-0">@ViewBag.ptitle</h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">@ViewBag.pagetitle</a></li>
                    <li class="breadcrumb-item active">@ViewBag.ptitle</li>
                </ol>
            </div>

        </div>
    </div>
</div>
<!-- end page title -->
<div class="card" id="productunitsList">
    <div class="card-header border-0">
        <div class="row align-items-center gy-3">
            <div class="col-sm">
                <h5 class="card-title mb-0">Product Units</h5>
            </div>
            <div class="col-sm-auto">
                <div class="d-flex gap-1 flex-wrap">
                    <button type="button" class="btn btn-success add-btn" data-bs-target="#addUnits" data-bs-toggle="modal" id="create-btn"><i class="ri-add-line align-bottom me-1"></i> Create Account</button>
                    <button type="button" class="btn btn-info"><i class="ri-file-download-line align-bottom me-1"></i> Import</button>
                    <button class="btn btn-soft-danger" id="remove-actions" onClick="deleteMultiple()"><i class="ri-delete-bin-2-line"></i></button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body border border-dashed border-end-0 border-start-0">
        <form>
            <div class="row g-3">
                <div class="col-xxl-4 col-sm-6">
                    <div class="search-box">
                        <input type="text" class="form-control search" placeholder="Search for Account Group,Under Group,Group Type or something...">
                        <i class="ri-search-line search-icon"></i>
                    </div>
                </div>
                <!--end col-->
                <!--end col-->
                <div class="col-xxl-2 col-sm-4">
                    <div>
                        <select class="form-control" name="choices-single-default" id="idUserType">
                            <option value="">Select Type</option>
                            <option value="all" selected>All</option>
                            <option value="User">User</option>
                        </select>
                    </div>
                </div>
                <!--end col-->
                <div class="col-xxl-2 col-sm-4">
                    <div>
                        <select class="form-control" name="choices-single-default" id="idsearchPermissionTo">
                            <option value="">Select PermissionTo</option>
                            <option value="all" selected>All</option>
                        </select>
                    </div>
                </div>
                <!--end col-->
                <div class="col-lg-auto">
                    <div>
                        <button type="button" class="btn btn-primary w-100" onclick="SearchData();">
                            <i class="ri-equalizer-fill me-1 align-bottom"></i>
                            Filter
                        </button>
                    </div>
                </div>
                <!--end col-->
            </div>
            <!--end row-->
        </form>
    </div>
    <div class="card-body pt-2">
        <div>
            <div class="table-responsive table-card mb-1">
                <table class="table table-nowrap align-middle" id="unitsTable">
                    <thead class="text-muted table-light">
                        <tr class="text-uppercase">
                            <th scope="col" style="width: 25px;">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="checkAll" value="option">
                                </div>
                            </th>
                            <th class="sort" data-sort="id">Id</th>
                            <th class="sort" data-sort="AccountGrp">Account Group</th>
                            <th class="sort" data-sort="UnderGrp">Under Group</th>
                            <th class="sort" data-sort="GroupType">Group  Type</th>
                            <th class="sort" data-sort="id">Action</th>
                        </tr>
                    </thead>
                    <tbody class="list form-check-all">
                        <tr id="idunitsTable">
                            <th scope="row">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="checkAll" value="option1">
                                </div>
                            </th>
                            <td class="id">VZ01</td>
                            <td class="UnitName">Direct Expenses</td>
                            <td class="UndGst">Direct Incomes</td>
                            <td class="GrpType">Primary</td>
                            <td>
                                <ul class="list-inline hstack gap-2 mb-0">
                                    <li class="list-inline-item edit" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="Edit">
                                        <a href="#EditEmployee" onclick="fnEditRecord(this.closest('tr').querySelector('.id').textContent);" data-bs-toggle="modal" class="text-primary d-inline-block edit-item-btn" data-id="VZ01">
                                            <i class="ri-pencil-fill fs-16"></i>
                                        </a>
                                    </li>

                                    <li class="list-inline-item" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="Remove">
                                        <a class="text-danger d-inline-block remove-item-btn" onclick="fnDeleteRecordPopup(this.closest('tr').querySelector('.id').textContent);" data-bs-toggle="modal">
                                            <i class="ri-delete-bin-5-fill fs-16"></i>
                                        </a>
                                    </li>
                                </ul>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="noresult" style="display: none">
                    <div class="text-center">
                        <lord-icon src="https://cdn.lordicon.com/msoeawqm.json" trigger="loop" colors="primary:#405189,secondary:#0ab39c" style="width:75px;height:75px"></lord-icon>
                        <h5 class="mt-2">Sorry! No Result Found</h5>
                        <p class="text-muted">We've searched more than 150+ Users We did not find any Users for you search.</p>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-end">
                <div class="pagination-wrap hstack gap-2">
                    <a class="page-item pagination-prev disabled" href="#">
                        Previous
                    </a>
                    <ul class="pagination listjs-pagination mb-0"></ul>
                    <a class="page-item pagination-next" href="#">
                        Next
                    </a>
                </div>
            </div>
        </div>


        <!-- Modal -->
        <div class="modal fade flip" id="deleteOrder" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-body p-5 text-center">
                        <lord-icon src="https://cdn.lordicon.com/gsqxdxog.json" trigger="loop" colors="primary:#405189,secondary:#f06548" style="width:90px;height:90px"></lord-icon>
                        <div class="mt-4 text-center">
                            <h4>You are about to delete a order ?</h4>
                            <p class="text-muted fs-15 mb-4">Deleting your order will remove all of your information from our database.</p>
                            <div class="hstack gap-2 justify-content-center remove">
                                <button class="btn btn-link link-success fw-medium text-decoration-none" id="deleteRecord-close" data-bs-dismiss="modal"><i class="ri-close-line me-1 align-middle"></i> Close</button>
                                <button class="btn btn-danger" id="delete-record">Yes, Delete It</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end modal -->
    </div>
</div>

<!--end row-->
<div id="noresult" class="d-none">
    <div class="text-center py-4">
        <lord-icon src="https://cdn.lordicon.com/msoeawqm.json" trigger="loop" colors="primary:#405189,secondary:#0ab39c" style="width:75px;height:75px"></lord-icon>
        <h5 class="mt-2">Sorry! No Result Found</h5>
        <p class="text-muted mb-0">We've searched more than 150+ Users We did not find any Users for you search.</p>
    </div>
</div>

<!-- Add Item -->
<div class="modal fade" id="addUnits" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light p-3">
                <h5 class="modal-title" id="exampleModalLabel">Create Product Unit</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <input type="text" id="hdnIDInput" hidden />
                            <label for="UnitnameInput" class="form-label">Unit Name</label>
                            <input type="text" class="form-control" id="UnitnameInput" placeholder="Enter Unit Name">
                        </div>
                    </div>
                    <!--end col-->
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label for="UndergstUnitInput" class="form-label">Under GST Unit</label>
                            <select class="form-select" aria-label=".form-select-sm example" id="UndergstUnitInput">
                                <option selected value="">Please Select</option>
                                <option value="BAG-BAGS">BAG-BAGS</option>
                                <option value="Bags">Bags</option>
                                <option value="Box">Box</option>
                                <option value="BAL-BALE">BAL-BALE</option>
                                <option value="BDL-BUNDLES">BDL-BUNDLES</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label for="FormalnameInput" class="form-label">Formal Name</label>
                            <input type="text" class="form-control" id="FormalnameInput" placeholder="Enter Formal Name">
                        </div>
                    </div>
                    <!--end col-->
                    <div class="col-lg-12">
                        <div class="mb-3">
                            <label for="DecimalNumberInput" class="form-label">Number of Decimals</label>
                            <input type="number" class="form-control" id="DecimalNumberInput" placeholder="No. of Decimal" value="0">
                        </div>
                    </div>
                    <!--end col-->
                </div>
            </div>
            <div class="modal-footer">
                <div class="hstack gap-2 justify-content-end">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-success" onclick="fnOnsaveProductUnits()" id="btnSave">Submit</button>
                    <button type="button" class="btn btn-success" onclick="fnOnupdateProductUnits()" id="btnUpdate">Update</button>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- removeItemModal -->
<div id="removeItemModal" class="modal fade zoomIn" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="btn-close"></button>
            </div>
            <div class="modal-body">
                <div class="mt-2 text-center">
                    <lord-icon src="https://cdn.lordicon.com/gsqxdxog.json" trigger="loop" colors="primary:#f7b84b,secondary:#f06548" style="width:100px;height:100px"></lord-icon>
                    <div class="mt-4 pt-2 fs-15 mx-4 mx-sm-5">
                        <h4>Are you sure ?</h4>
                        <p class="text-muted mx-4 mb-0">Are you sure you want to remove this Account Group ?</p>
                    </div>
                </div>
                <div class="d-flex gap-2 justify-content-center mt-4 mb-2">
                    <button type="button" class="btn w-sm btn-light" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn w-sm btn-danger " onclick="fnDeleteRecord()" id="delete-product">Yes, Delete It!</button>
                </div>
            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section scripts {


    <script>

        $(document).ready(function () {
            //fngetProductUnitlist();
            $('#btnUpdate').hide();
            $('#btnSave').show();
        });
        checkAll = document.getElementById("checkAll"),
            perPage = (checkAll && (checkAll.onclick = function () {
                for (var e = document.querySelectorAll('.form-check-all input[type="checkbox"]'), t = document.querySelectorAll('.form-check-all input[type="checkbox"]:checked').length, a = 0; a < e.length; a++) e[a].checked = this.checked, e[a].checked ? e[a].closest("tr").classList.add("table-active") : e[a].closest("tr").classList.remove("table-active");
                document.getElementById("remove-actions").style.display = 0 < t ? "none" : "block"
            }), 5),
            editlist = !1,
            options = {
                valueNames: ["id", "UnitName", "UndGst", "GrpType"], //, "status"
                page: perPage,
                pagination: !0,
                plugins: [ListPagination({
                    left: 2,
                    right: 2
                })]
            },
            productunitsList = new List("productunitsList", options).on("updated", function (e) {
                0 == e.matchingItems.length ? document.getElementsByClassName("noresult")[0].style.display = "block" : document.getElementsByClassName("noresult")[0].style.display = "none";
                var t = 1 == e.i,
                    a = e.i > e.matchingItems.length - e.page;
                document.querySelector(".pagination-prev.disabled") && document.querySelector(".pagination-prev.disabled").classList.remove("disabled"), document.querySelector(".pagination-next.disabled") && document.querySelector(".pagination-next.disabled").classList.remove("disabled"), t && document.querySelector(".pagination-prev").classList.add("disabled"), a && document.querySelector(".pagination-next").classList.add("disabled"), e.matchingItems.length <= perPage ? document.querySelector(".pagination-wrap").style.display = "none" : document.querySelector(".pagination-wrap").style.display = "flex", e.matchingItems.length == perPage && document.querySelector(".pagination.listjs-pagination").firstElementChild.children[0].click(), 0 < e.matchingItems.length ? document.getElementsByClassName("noresult")[0].style.display = "none" : document.getElementsByClassName("noresult")[0].style.display = "block"
            });
            const xhttp = new XMLHttpRequest;
            xhttp.onload = function () {
                var e = JSON.parse(this.responseText);
                console.log("Response Data:", this.responseText);
                datalist = e;
                Array.from(e).forEach(function (e) {
                    productunitsList.add({
                        id: e.id,
                        UnitName: e.unitName,
                    UndGst: e.gstrUnit,
                        GrpType: e.unitType,
                    }),
                        productunitsList.sort("id", {
                            order: "desc"
                        })
                }), productunitsList.remove("id", 'VZ01');

            }, xhttp.open("GET", "/api/ProductUnitsApi/"), xhttp.send();







        function fnOnsaveProductUnits() {

            var pdtUnits = {
                UnitName: $("#UnitnameInput").val(),
                GSTRUnit: $("#UndergstUnitInput").val(),
                UnitType: 'Simple',
                FormalName: $("#FormalnameInput").val(),
                decimals: $("#DecimalNumberInput").val(),
            }
            $.ajax({
                url: "/api/ProductUnitsApi",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(pdtUnits),
                dataType: 'json',
                async: false,
                cache: false,
                beforeSend: function () {
                    // $('#divAlert').show();
                },
                success: function (data) {
                    if (data.status) {
                        $('#addUnits').modal('hide');
                        Swal.fire(
                            {
                                title: 'Product Units',
                                text: data.message,
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                        //setTimeout(location.reload(true), 10000);
                    }
                    else {
                        Swal.fire(
                            {
                                title: 'Product Units',
                                text: data.message,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                    }
                },
                complete: function () {
                    // $('#divAlert').hide();
                    // $('#SampleModal').modal('hide');
                    location.reload(true)
                },
                error: function (e) {
                    console.log(e.responseText);
                }
            });
        }

        function fnEditRecord(Id) {

            $("#hdnIDInput").val(Id);

            $('#btnUpdate').show();
            $('#btnSave').hide();
            $('#exampleModalLabel').text("Update Product Units");

            $.ajax({
                url: '/api/ProductUnitsApi/' + Id,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    //$('#divLoader').show();
                },
                success: function (data) {
                    console.log(data);

                    $('#addUnits').modal('show');

                    $("#UnitnameInput").val(data.unitName);
                    $("#UndergstUnitInput").val(data.gstrUnit);
                    $("#FormalnameInput").val(data.formalName);
                    $("#DecimalNumberInput").val(data.decimals);
                },
                complete: function (e) {
                },
                error: function (e) {
                    //$('body').removeClass('modal-open');
                    //$('.modal-backdrop').remove();
                    console.log(e.responseText);
                }
            });

        }

        function fnOnupdateProductUnits() {

            var pdtUnits = {
                Id: parseInt($("#hdnIDInput").val()),
                UnitName: $("#UnitnameInput").val(),
                GSTRUnit: $("#UndergstUnitInput").val(),
                UnitType: 'Simple',
                FormalName: $("#FormalnameInput").val(),
                decimals: $("#DecimalNumberInput").val(),
            }
            $.ajax({
                url: "/api/ProductUnitsApi",
                type: "PUT",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(pdtUnits),
                beforeSend: function () {
                    // $('#divAlert').show();
                },
                //success: function (data, jqXHR) {
                success: function (data) {

                    if (data.status) {
                        Swal.fire(
                            {
                                title: 'Product Units',
                                text: data.message,
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )

                        $('#addUnits').modal('hide');
                        $('#btnUpdate').hide();
                        $('#btnSave').show();
                        $('#exampleModalLabel').text("Create Product Unit");

                        $("#UnitnameInput").val("");
                        $("#UndergstUnitInput").val("");
                        $("#FormalnameInput").val("");
                    }
                    else {
                        Swal.fire(
                            {
                                title: 'Product Units',
                                text: data.message,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                    }

                },
                complete: function () {
                    // $('#divAlert').hide();
                    // $('#SampleModal').modal('hide');
                     location.reload(true)
                },
                error: function (e) {
                    $('.error').show();
                }
            });
        }

        function fnDeleteRecordPopup(Id) {
            $("#hdnIDInput").val(Id);
            $('#removeItemModal').modal('show');
        }

        function fnDeleteRecord() {
            var Id = $("#hdnIDInput").val();
            if (Id > 0) {
                $.ajax({
                    url: '/api/ProductUnitsApi/' + Id,
                    type: "DELETE",
                    dataType: 'json',
                    beforeSend: function () {
                        // $('#loader').show();
                    },
                    success: function (data) {
                        console.log(data);
                        Swal.fire(
                            {
                                title: 'Product Units',
                                text: data.message,
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                    },
                    complete: function () {
                        location.reload(true)
                    },
                    error: function (e) {
                        // alert(e.responseText);

                        console.log(e.responseText);
                    }
                });

            }

        }
        function deleteMultiple() {
            let checkboxes = document.querySelectorAll('.form-check-input:checked');
            let ids_array = [];

            checkboxes.forEach(checkbox => {
                // Traverse to the parent row and find the element containing the ID
                let row = checkbox.closest('tr'); // Get the parent row of the checkbox
                if (row) {
                    let idColumn = row.querySelector('.id');
                    if (idColumn) {
                        let idValue = idColumn.textContent.trim();
                        ids_array.push(idValue);
                    }
                }
            });

            // Check if at least one ID was selected
            if (ids_array.length > 0) {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn btn-primary w-xs me-2 mt-2",
                    cancelButtonClass: "btn btn-danger w-xs mt-2",
                    confirmButtonText: "Yes, delete it!",
                    buttonsStyling: false,
                    showCloseButton: true
                }).then(function (result) {
                    if (result.isConfirmed) { // Changed from result.value to result.isConfirmed
                        // Make an API call to delete the items on the backend
                        $.ajax({
                            url: "/api/ProductUnitsApi", // Ensure this is the correct endpoint for your DELETE request
                            type: "DELETE",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ ids: ids_array }), // Sending the IDs to be deleted as JSON
                            success: function (data) {
                                if (data.success) {
                                    // Show the success alert before reloading
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Your data has been deleted.",
                                        icon: "success",
                                        confirmButtonClass: "btn btn-info w-xs mt-2",
                                        buttonsStyling: false
                                    }).then(() => {
                                        // Reload the page after displaying the success message
                                        location.reload();
                                    });
                                } else {
                                    // Handle deletion failure
                                    Swal.fire({
                                        title: "Error",
                                        text: "Failed to delete items on the server.",
                                        icon: "error",
                                        confirmButtonClass: "btn btn-danger w-xs mt-2",
                                        buttonsStyling: false
                                    });
                                }
                            },
                            error: function (xhr, status, error) {
                                // Handle any network or other errors
                                Swal.fire({
                                    title: "Error",
                                    text: "An error occurred while deleting items.",
                                    icon: "error",
                                    confirmButtonClass: "btn btn-danger w-xs mt-2",
                                    buttonsStyling: false
                                });
                                console.error('Error:', error);
                            }
                        });

                        // Optional UI updates before confirmation from the server
                        // Commented out this section to avoid pre-emptive row removal
                        // document.getElementById("remove-actions").style.display = "none";
                        // document.getElementById("checkAll").checked = false;
                    }
                });
            } else {
                Swal.fire({
                    title: "Please select at least one checkbox",
                    icon: "info",
                    confirmButtonClass: "btn btn-info",
                    buttonsStyling: false,
                    showCloseButton: true
                });
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            debugger;
            const createBtn = document.getElementById('create-btn');
            const modalTitle = document.getElementById('exampleModalLabel');
            let isEditMode = false;
            let currentAccount = null;
            createBtn.addEventListener('click', function () {
                debugger;
                // Reset fields and set mode to "Create" by default
                isEditMode = false;
                currentAccount = null;
                modalTitle.textContent = 'Create Account Group';
                $('#btnUpdate').hide();
                $('#btnSave').show();

                $('#UnitnameInput').val('');
                $('#UndergstUnitInput').val('');
                $('#FormalnameInput').val('');
                $('#DecimalNumberInput').val('');
            });


        });

        //Previous Code

        function fngetProductUnitlist() {
            $.ajax({
                url: '/api/ProductUnitsApi/',
                beforeSend: function () {
                    // $('#loader').show();
                    // $('#loaderTop').show();
                },
                success: function (data) {

                    const Mainarray = [];
                    data.forEach(function (category) {
                        const arr = [];
                        arr.push(category.id);
                        arr.push(category.unitName);
                        arr.push(category.gstrUnit);
                        arr.push(category.unitType);
                        arr.push(category.formalName);
                        Mainarray.push(arr);
                    });

                    new gridjs.Grid({
                        columns: [
                            {
                                name: 'ID',
                                width: '50px',
                                formatter: (function (cell) {
                                    return gridjs.html('' + cell + '');
                                })
                            },
                            "Account Group",
                            "Under Group",
                            "Group  Type",
                            {
                                name: "Action",
                                width: "120px",
                                sort: {
                                    enabled: !1
                                },
                                formatter: function (e, t) {
                                    return gridjs.html('<ul class="list-inline hstack gap-2 mb-0"><li class="list-inline-item edit" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" aria-label="Edit" data-bs-original-title="Edit"><a href="#" onclick="fnEditRecord(' + t._cells[0].data + ')" data-id=' + t._cells[0].data + ' class="text-primary d-inline-block edit-item-btn"><i class="ri-pencil-fill fs-16"></i></a> </li><li class="list-inline-item" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" aria-label="Remove" data-bs-original-title="Remove"><a class="text-danger d-inline-block remove-item-btn"data-id=' + t._cells[0].data + ' onclick="fnDeleteRecordPopup(' + t._cells[0].data + ')"  href="#"><i class="ri-delete-bin-5-fill fs-16"></i></a> </li></ul>')
                                }
                            },
                        ],
                        pagination: {
                            limit: 10
                        },
                        sort: true,
                        search: false,
                        data: Mainarray,
                    }).render(document.getElementById("ProductUnittable-gridjs1"));
                    $('.gridjs-head').hide();

                    // $('#loader').hide();
                    // $('#loaderTop').hide();
                },
                error: function (e) {
                    // alert(e.responseText);
                    // $('#loader').hide();
                    console.log(e.responseText);
                },
                complete: function () {
                    // $('#loader').hide();
                }
            });

        }

    </script>



}