@{
    ViewBag.Title = "Employee";
    ViewBag.pTitle = "Employee Management";
    ViewBag.pageTitle = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- start page title -->
<div class="row">
    <div class="col-12">
        <div class="page-title-box d-sm-flex align-items-center justify-content-between">
            <h4 class="mb-sm-0">@ViewBag.ptitle</h4>

            <div class="page-title-right">
                <ol class="breadcrumb m-0">
                    <li class="breadcrumb-item"><a href="javascript: void(0);">@ViewBag.pagetitle</a></li>
                    <li class="breadcrumb-item active">@ViewBag.ptitle</li>
                </ol>
            </div>

        </div>
    </div>
</div>
<!-- end page title -->


<div class="card" id="empList">
    <div class="card-header border-0">
        <div class="row align-items-center gy-3">
            <div class="col-sm">
                <h5 class="card-title mb-0">Employees</h5>
            </div>
            <div class="col-sm-auto">
                <div class="d-flex gap-1 flex-wrap">
                    <button type="button" class="btn btn-success add-btn" onclick="fnAddNewEmployee()" data-bs-toggle="modal" id="create-btn"><i class="ri-add-line align-bottom me-1"></i> Create Employee</button>
                    <button type="button" class="btn btn-info"><i class="ri-file-download-line align-bottom me-1"></i> Import</button>
                    <button class="btn btn-soft-danger" id="remove-actions" onClick="deleteMultiple()"><i class="ri-delete-bin-2-line"></i></button>
                </div>
            </div>
        </div>
    </div>
    <div class="card-body border border-dashed border-end-0 border-start-0">
        <form>
            <div class="row g-3">
                <div class="col-xxl-4 col-sm-6">
                    <div class="search-box">
                        <input type="text" class="form-control search" placeholder="Search for Employee ID,Employee Name,Designation or something...">
                        <i class="ri-search-line search-icon"></i>
                    </div>
                </div>
                <!--end col-->
                <!--end col-->
                <div class="col-xxl-2 col-sm-4">
                    <div>
                        <select class="form-control" name="choices-single-default" id="idUserType">
                            <option value="">Select Type</option>
                            <option value="all" selected>All</option>
                            <option value="User">User</option>
                        </select>
                    </div>
                </div>
                <!--end col-->
                <div class="col-xxl-2 col-sm-4">
                    <div>
                        <select class="form-control"  name="choices-single-default" id="idsearchPermissionTo">
                            <option value="">Select PermissionTo</option>
                            <option value="all" selected>All</option>
                        </select>
                    </div>
                </div>
                <!--end col-->
                <div class="col-lg-auto">
                    <div>
                        <button type="button" class="btn btn-primary w-100" onclick="SearchData();">
                            <i class="ri-equalizer-fill me-1 align-bottom"></i>
                            Filter
                        </button>
                    </div>
                </div>
                <!--end col-->
            </div>
            <!--end row-->
        </form>
    </div>
    <div class="card-body pt-2">
        <div>
            <div class="table-responsive table-card mb-1">
                <table class="table table-nowrap align-middle" id="empTable">
                    <thead class="text-muted table-light">
                        <tr class="text-uppercase">
                            <th scope="col" style="width: 25px;">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" id="checkAll" value="option">
                                </div>
                            </th>
                            <th class="sort" data-sort="id">Id</th>
                            <th class="sort" data-sort="EmpId">Employee ID</th>
                            <th class="sort" data-sort="EmpName">Name</th>
                            <th class="sort" data-sort="EmpDepartment">Gender</th>
                            <th class="sort" data-sort="EmpDesignation">Designation</th>
                            @* <th class="sort" data-sort="EmpAddress">Address</th> *@
                            <th class="sort" data-sort="EmpContactNo">Contact No</th>
                            <th class="sort" data-sort="EmpEmailId">Email ID</th>
                            <th class="sort" data-sort="isActive">Status</th>
                            <th class="sort" data-sort="id">Action</th>
                        </tr>
                    </thead>
                    <tbody class="list form-check-all">
                        <tr id="idempTable">
                            <th scope="row">
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" name="checkAll" value="option1">
                                </div>
                            </th>
                            <td class="id">VZ01</td>
                            <td class="EmpId">FRH01</td>
                            <td class="EmpName">Frank Hook</td>
                            <td class="EmpGender">Male</td>
                            <td class="EmpDesignation">Manager</td>
                            @* <td class="EmpAddress">ABC Villa</td> *@
                            <td class="EmpContactNo">123456</td>
                            <td class="EmpEmailId">frank@gmail.com</td>
                            <td class="isActive">Inactive</td>
                            @*  <td class="status">
                            <span class="badge bg-warning-subtle text-warning text-uppercase">Pending</span>
                            </td> *@
                            <td>
                                <ul class="list-inline hstack gap-2 mb-0">
                                    @* <li class="list-inline-item" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="View">
                                    <a href="apps-ecommerce-order-details.html" class="text-primary d-inline-block">
                                    <i class="ri-eye-fill fs-16"></i>
                                    </a>
                                    </li> *@
                                    <li class="list-inline-item edit" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="Edit">
                                        <a href="#EditEmployee" onclick="fnEditRecord(this.closest('tr').querySelector('.id').textContent);" data-bs-toggle="modal" class="text-primary d-inline-block edit-item-btn" data-id="VZ01">
                                            <i class="ri-pencil-fill fs-16"></i>
                                        </a>
                                    </li>

                                    <li class="list-inline-item" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" title="Remove">
                                        <a class="text-danger d-inline-block remove-item-btn" onclick="fnDeleteRecordPopup(this.closest('tr').querySelector('.id').textContent);" data-bs-toggle="modal">
                                            <i class="ri-delete-bin-5-fill fs-16"></i>
                                        </a>
                                    </li>
                                </ul>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <div class="noresult" style="display: none">
                    <div class="text-center">
                        <lord-icon src="https://cdn.lordicon.com/msoeawqm.json" trigger="loop" colors="primary:#405189,secondary:#0ab39c" style="width:75px;height:75px"></lord-icon>
                        <h5 class="mt-2">Sorry! No Result Found</h5>
                        <p class="text-muted">We've searched more than 150+ Users We did not find any Users for you search.</p>
                    </div>
                </div>
            </div>
            <div class="d-flex justify-content-end">
                <div class="pagination-wrap hstack gap-2">
                    <a class="page-item pagination-prev disabled" href="#">
                        Previous
                    </a>
                    <ul class="pagination listjs-pagination mb-0"></ul>
                    <a class="page-item pagination-next" href="#">
                        Next
                    </a>
                </div>
            </div>
        </div>

        <div class="modal fade" id="showModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header bg-light p-3">
                        <h5 class="modal-title" id="exampleModalLabel">&nbsp;</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
                    </div>
                    <form class="tablelist-form" autocomplete="off">
                        <div class="modal-body">
                            <input type="hidden" id="id-field" />

                            <div class="mb-3" id="modal-id">
                                <label for="orderId" class="form-label">ID</label>
                                <input type="text" id="orderId" class="form-control" placeholder="ID" readonly />
                            </div>

                            <div class="mb-3">
                                <label for="customername-field" class="form-label">Customer Name</label>
                                <input type="text" id="customername-field" class="form-control" placeholder="Enter name" required />
                            </div>

                            <div class="mb-3">
                                <label for="productname-field" class="form-label">Product</label>
                                <select class="form-control" data-trigger name="productname-field" id="productname-field" required />
                                <option value="">Product</option>
                                <option value="Puma Tshirt">Puma Tshirt</option>
                                <option value="Adidas Sneakers">Adidas Sneakers</option>
                                <option value="350 ml Glass Grocery Container">350 ml Glass Grocery Container</option>
                                <option value="American egale outfitters Shirt">American egale outfitters Shirt</option>
                                <option value="Galaxy Watch4">Galaxy Watch4</option>
                                <option value="Apple iPhone 12">Apple iPhone 12</option>
                                <option value="Funky Prints T-shirt">Funky Prints T-shirt</option>
                                <option value="USB Flash Drive Personalized with 3D Print">USB Flash Drive Personalized with 3D Print</option>
                                <option value="Oxford Button-Down Shirt">Oxford Button-Down Shirt</option>
                                <option value="Classic Short Sleeve Shirt">Classic Short Sleeve Shirt</option>
                                <option value="Half Sleeve T-Shirts (Blue)">Half Sleeve T-Shirts (Blue)</option>
                                <option value="Noise Evolve Smartwatch">Noise Evolve Smartwatch</option>
                                </select>
                            </div>

                            <div class="mb-3">
                                <label for="date-field" class="form-label">Order Date</label>
                                <input type="date" id="date-field" class="form-control" data-provider="flatpickr" required data-date-format="d M, Y" data-enable-time required placeholder="Select date" />
                            </div>

                            <div class="row gy-4 mb-3">
                                <div class="col-md-6">
                                    <div>
                                        <label for="amount-field" class="form-label">Amount</label>
                                        <input type="text" id="amount-field" class="form-control" placeholder="Total amount" required />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div>
                                        <label for="payment-field" class="form-label">Payment Method</label>
                                        <select class="form-control" data-trigger name="payment-method" required id="payment-field">
                                            <option value="">Payment Method</option>
                                            <option value="Mastercard">Mastercard</option>
                                            <option value="Visa">Visa</option>
                                            <option value="COD">COD</option>
                                            <option value="Paypal">Paypal</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div>
                                <label for="delivered-status" class="form-label">Delivery Status</label>
                                <select class="form-control" data-trigger name="delivered-status" required id="delivered-status">
                                    <option value="">Delivery Status</option>
                                    <option value="Pending">Pending</option>
                                    <option value="Inprogress">Inprogress</option>
                                    <option value="Cancelled">Cancelled</option>
                                    <option value="Pickups">Pickups</option>
                                    <option value="Delivered">Delivered</option>
                                    <option value="Returns">Returns</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <div class="hstack gap-2 justify-content-end">
                                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-success" id="add-btn">Add Order</button>
                                <!-- <button type="button" class="btn btn-success" id="edit-btn">Update</button> -->
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div class="modal fade flip" id="deleteOrder" tabindex="-1" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-body p-5 text-center">
                        <lord-icon src="https://cdn.lordicon.com/gsqxdxog.json" trigger="loop" colors="primary:#405189,secondary:#f06548" style="width:90px;height:90px"></lord-icon>
                        <div class="mt-4 text-center">
                            <h4>You are about to delete a order ?</h4>
                            <p class="text-muted fs-15 mb-4">Deleting your order will remove all of your information from our database.</p>
                            <div class="hstack gap-2 justify-content-center remove">
                                <button class="btn btn-link link-success fw-medium text-decoration-none" id="deleteRecord-close" data-bs-dismiss="modal"><i class="ri-close-line me-1 align-middle"></i> Close</button>
                                <button class="btn btn-danger" id="delete-record">Yes, Delete It</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--end modal -->
    </div>
</div>



<!--end row-->


<div id="noresult" class="d-none">
    <div class="text-center py-4">
        <lord-icon src="https://cdn.lordicon.com/msoeawqm.json" trigger="loop" colors="primary:#405189,secondary:#0ab39c" style="width:75px;height:75px"></lord-icon>
        <h5 class="mt-2">Sorry! No Result Found</h5>
        <p class="text-muted mb-0">We've searched more than 150+ Users We did not find any Users for you search.</p>
    </div>
</div>


<div class="modal fade" id="addEmployee" tabindex="-1" aria-labelledby="addEmployeeLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header bg-light p-3">
                <h5 class="modal-title" id="addUserLabel">&nbsp;</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close-modal"></button>
            </div>

            <div class="modal-body">

                <div class="text-center">
                    <div class="position-relative d-inline-block">
                        <div class="position-absolute  bottom-0 end-0">
                            <label for="companylogo-image-input" class="mb-0" data-bs-toggle="tooltip" data-bs-placement="right" title="Select Image">
                                <div class="avatar-xs cursor-pointer">
                                    <div class="avatar-title bg-light border rounded-circle text-muted">
                                        <i class="ri-image-fill"></i>
                                    </div>
                                </div>
                            </label>
                            <input class="form-control d-none" value="" id="companylogo-image-input" type="file" accept="image/png, image/gif, image/jpeg">
                        </div>
                        <div class="avatar-lg p-1">
                            <div class="avatar-title bg-light rounded-circle">
                                <img src="assets/images/users/multi-user.jpg" id="companylogo-img" class="avatar-md h-auto rounded-circle object-fit-cover" />
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="AddEmpIDInput" class="form-label">Employee ID</label>
                    <input type="text" class="form-control" id="AddEmpIDInput" value="EMP1" readonly>
                </div><div class="mb-3">
                    <label for="AddEmpNameInput" class="form-label">Employee Name<span class="c_ff1100">*</span></label>
                    <input type="text" class="form-control" id="AddEmpNameInput" placeholder="Enter your Employee Name" required>
                </div>
                <div class="mb-3">
                    <label for="AddEmailidInput" class="form-label">Email ID<span class="c_ff1100">*</span></label>
                    <input type="text" class="form-control" id="AddEmailidInput" placeholder="Enter Email Id" required>
                </div>
                <div class="mb-3">
                    <label for="AddDesignationInput" class="form-label">Designation<span class="c_ff1100">*</span></label>
                    <select class="form-select" aria-label=".form-select-sm example" id="AddDesignationInput">
                        <option selected value="">Please Select</option>
                        <option value="Manager">Manager</option>
                        <option value="Tester">Tester</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="AddGenderInput" class="form-label">Gender</label>
                    <select class="form-select" aria-label=".form-select-sm example" id="AddGenderInput">
                        <option selected value="">Please Select</option>
                        <option value="Female">Female</option>
                        <option value="Male">Male</option>
                    </select>
                </div>

            </div>
            <div class="modal-footer">
                <div class="hstack gap-2 justify-content-end">
                    <button type="button" class="btn btn-light" data-bs-dismiss="modal">Close</button>
                    <button type="submit" id="btnSave" onclick="fnOnSaveEmployee()" class="btn btn-success">Add</button>
                </div>
            </div>

        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade zoomIn" id="EditEmployee" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-content border-0 mt-3">
                <ul class="nav nav-tabs nav-tabs-custom nav-success p-2 pb-0 bg-light" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" data-bs-toggle="tab" href="#personalDetails" role="tab" aria-selected="true">
                            Personal Details
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#businessDetails" role="tab" aria-selected="false">
                            Contact Details
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="tab" href="#bankDetails" role="tab" aria-selected="false">
                            Sales & Payment Details
                        </a>
                    </li>
                </ul>
            </div>
            <div class="modal-body">
                <div class="tab-content">
                    <div class="tab-pane active" id="personalDetails" role="tabpanel">
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="EmpIDInput" class="form-label">Employee ID</label>
                                    <input type="text" disabled class="form-control" id="EmpIDInput" value="EMP1">
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="mb-3">
                                    <label for="EmpNameInput" class="form-label">Employee Name<span class="c_ff1100">*</span></label>
                                    <input type="text" class="form-control" id="EmpNameInput" placeholder="Enter your Employee Name">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="BarcodeInput" class="form-label">Barcode</label>
                                    <input type="text" class="form-control" id="BarcodeInput" placeholder="Enter Barcode">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="GenderInput" class="form-label">Gender</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="GenderInput">
                                        <option selected value="">Please Select</option>
                                        <option value="Female">Female</option>
                                        <option value="Male">Male</option>
                                    </select>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="DateofBirthInput" class="form-label">Date of Birth</label>
                                    <input type="text" id="DateofBirthInput" class="form-control" data-provider="flatpickr" data-altFormat="F j, Y">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="NationalityInput" class="form-label">Nationality</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="NationalityInput">
                                        <option selected value="">Please Select</option>
                                        <option value="INDIAN">INDIAN</option>
                                        <option value="Saudi Arabian">Saudi Arabian</option>
                                        <option value="OMAN">OMAN</option>
                                    </select>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="DateofJoiningInput" class="form-label">Date of Joining</label>
                                    <input type="text" id="DateofJoiningInput" class="form-control" data-provider="flatpickr" data-altFormat="F j, Y">
                                </div>
                            </div>

                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="EducationInput" class="form-label">Education</label>
                                    <input type="text" class="form-control" id="EducationInput" placeholder="Enter your Education">
                                </div>
                            </div>

                            <!--end col-->

                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="DesignationInput" class="form-label">Designation<span class="c_ff1100">*</span></label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="DesignationInput">
                                        <option selected value="">Please Select</option>
                                        <option selected value="Manager">Manager</option>
                                        <option selected value="Tester">Tester</option>
                                    </select>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="DepNameInput" class="form-label">Department</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="DepNameInput">
                                        <option selected value="">Please Select</option>
                                        <option value="Primary">Primary</option>
                                        <option value="Secondary">Secondary</option>
                                    </select>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="TeamNameInput" class="form-label">Team</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="TeamNameInput">
                                        <option selected value="">Please Select</option>
                                        <option selected value="Team1">Team1</option>
                                        <option selected value="Team2">Team2</option>
                                    </select>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="ContracttypeInput" class="form-label">Contact Type</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="ContracttypeInput">
                                        <option selected value="">Please Select</option>
                                        <option value="Limited">Limited</option>
                                        <option value="Unlimited">Unlimited</option>
                                    </select>
                                </div>
                            </div>

                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="DisconnectDateInput" class="form-label">Discountinued Date</label>
                                    <input type="text" id="DisconnectDateInput" class="form-control" data-provider="flatpickr" data-altFormat="F j, Y">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-2">
                                <div class="mb-3">
                                    <div class="form-check notification-check">
                                        <input class="form-check-input" type="checkbox" value="" id="NoneInput-check01">
                                        <label class="form-check-label" for="NoneInput-check01">None</label>
                                    </div>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="contractexpirydateInput" class="form-label">Contact Expiry</label>
                                    <input type="text" id="contractexpirydateInput" class="form-control" data-provider="flatpickr" data-altFormat="F j, Y">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="workingforInput" class="form-label">Working For</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="workingforInput">
                                        <option selected value="">Please Select</option>
                                        <option selected value="Department">Department</option>
                                        <option selected value="Project">Project</option>
                                    </select>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="VisaFromInput" class="form-label">VISA From</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="VisaFromInput">
                                        <option selected value="">Please Select</option>
                                        <option selected value="Tourist Visa">Tourist Visa</option>
                                        <option selected value="Student Visa">Student Visa</option>
                                    </select>
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="CostCatInput" class="form-label">Cost Category</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="CostCatInput">
                                        <option value="">Please Select</option>
                                        <option selected value="Primary">Primary</option>
                                        <option selected value="Secondary">Secondary</option>
                                    </select>
                                </div>
                            </div>
                           @*  <div class="col-lg-3">
                                <div class="mb-3">
                                    <label for="CostCatInput" class="form-label">Status</label>
                                    <select class="form-select" aria-label=".form-select-sm example" id="CostCatInput">
                                        <option value="">Please Select</option>
                                        <option selected value="1">Active</option>
                                        <option selected value="0">Inactive</option>
                                    </select>
                                </div>
                            </div> *@
                            <!--end col-->
                            <!--end col-->
                        </div>
                    </div>
                    <div class="tab-pane" id="businessDetails" role="tabpanel">
                        <div class="row">
                            <div class="row">
                                <label class="form-label"><u>Contact Details</u></label>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="EmpaddressInput" class="form-label">Residence Address</label>
                                        <input type="text" class="form-control" id="EmpaddressInput" placeholder="Enter your Address">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="EmpCityInput" class="form-label">City</label>
                                        <input type="text" class="form-control" id="EmpCityInput" placeholder="Enter your City">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="EmpcontactnoInput" class="form-label">Contact No.</label>
                                        <input type="text" class="form-control" id="EmpcontactnoInput" placeholder="Enter your contact No.">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="emailidInput" class="form-label">Email ID</label>
                                        <input type="text" class="form-control" id="emailidInput" placeholder="Enter your Email Id">
                                    </div>
                                </div>
                            </div>

                            <!--end col-->

                            <div class="row">
                                <label class="form-label"><u>Permenant Details</u></label>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        <label for="PeraddressInput" class="form-label">Address</label>
                                        <input type="text" class="form-control" id="PeraddressInput" placeholder="Enter Address">
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        <label for="PerCityInput" class="form-label">City</label>
                                        <input type="text" class="form-control" id="PerCityInput" placeholder="Enter City">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="Percontactno1Input" class="form-label">Contact No.</label>
                                        <input type="text" class="form-control" id="Percontactno1Input" placeholder="Enter contact No.">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="Percontactno2Input" class="form-label">Contact No.</label>
                                        <input type="text" class="form-control" id="Percontactno2Input" placeholder="Enter contact No.">
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="mb-3">
                                        <label for="PeremailidInput" class="form-label">Email ID</label>
                                        <input type="text" class="form-control" id="PeremailidInput" placeholder="Enter Email Id">
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <label class="form-label"><u>Local Reference Address</u></label>

                                <!--end col-->
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="RefNameInput" class="form-label">Name</label>
                                        <input type="text" class="form-control" id="RefNameInput" placeholder="Enter Name">
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label for="RefAddressInput" class="form-label">Address</label>
                                        <input type="text" class="form-control" id="RefAddressInput" placeholder="Enter adress">
                                    </div>
                                </div>
                                <div class="col-lg-2">
                                    <div class="mb-3">
                                        <label for="RefCityInput" class="form-label">City</label>
                                        <input type="text" class="form-control" id="RefCityInput" placeholder="Enter City">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="RefContactNo1Input" class="form-label">Contact No.</label>
                                        <input type="text" class="form-control" id="RefContactNo1Input" placeholder="Enter Contact No.1">
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="mb-3">
                                        <label for="RefContactNo2Input" class="form-label">Contact No.</label>
                                        <input type="text" class="form-control" id="RefContactNo2Input" placeholder="Enter Contact No. 2">
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-3">
                                        <label for="RefEmailidInput" class="form-label">Email ID</label>
                                        <input type="email" class="form-control" id="RefEmailidInput" placeholder="Enter email ID">
                                    </div>
                                </div>
                                <div class="col-lg-5">
                                    <div class="mb-3">
                                        <label for="RefNotesInput" class="form-label">Notes</label>
                                        <input type="text" class="form-control" id="RefNotesInput" placeholder="Enter Note">
                                    </div>
                                </div>
                            </div>



                            <!--end col-->
                        </div>
                    </div>
                    <div class="tab-pane" id="bankDetails" role="tabpanel">
                        <div class="row">
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="EmpPersonalIDInput" class="form-label">Employee Personal ID</label>
                                    <input type="text" class="form-control" id="EmpPersonalIDInput" />
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="bankcodeInput" class="form-label">Bank / Agent Code</label>
                                    <input type="text" class="form-control" id="bankcodeInput" />
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="bankacnoInput" class="form-label">Employee Bank A/c Number</label>
                                    <input type="number" class="form-control" id="bankacnoInput" placeholder="Enter account number">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="BasicsalaryInput" class="form-label">Basic Salary</label>
                                    <input type="number" class="form-control" id="BasicsalaryInput" placeholder="Enter Basic salary ">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="rateperhourInput" class="form-label">Hour Rate (For Over time)</label>
                                    <input type="number" class="form-control" id="rateperhourInput" placeholder="Enter hour rate">
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="SalaryTypeInput" class="form-label">Salary Type</label>
                                    <select class="form-control" id="SalaryTypeInput">
                                        <option value="">Select Salary Type</option>
                                        <option value="Basic">Basic</option>
                                        <option value="Fixed">Fixed</option>
                                    </select>
                                </div>
                            </div>


                            <div class="col-lg-6">
                                <div class="mb-3">
                                    <label for="empbanknameInput" class="form-label">Bank Name</label>
                                    <input type="text" class="form-control" id="empbanknameInput" placeholder="Enter your bank name">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-6">
                                <div class="mb-3">
                                    <label for="empbankacnoInput" class="form-label">Account Number</label>
                                    <input type="number" class="form-control" id="empbankacnoInput" placeholder="Enter account number">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="empbankbranchInput" class="form-label">Branch</label>
                                    <input type="text" class="form-control" id="empbankbranchInput" placeholder="Branch">
                                </div>
                            </div>

                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="bankifsccodeInput" class="form-label">IFSC</label>
                                    <input type="text" class="form-control" id="bankifsccodeInput" placeholder="IFSC">
                                </div>
                            </div>
                            <!--end col-->
                            <div class="col-lg-4">
                                <div class="mb-3">
                                    <label for="bankmicrcodeInput" class="form-label">Account Holder Name</label>
                                    <input type="text" class="form-control" id="bankmicrcodeInput" placeholder="micr code">
                                </div>
                            </div>

                            <!--end col-->

                        </div>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="hstack gap-2 justify-content-end">

                        <button class="btn btn-link link-success text-decoration-none fw-medium" data-bs-dismiss="modal"><i class="ri-close-line me-1 align-middle"></i> Close</button>
                        @* <button type="submit" id="btnSave" onclick="fnOnSaveEmployee()" class="btn btn-primary"><i class="ri-save-3-line align-bottom me-1"></i> Save</button> *@
                        <button type="submit" id="btnUpdate" onclick="fnOnUpdateEmployee()" class="btn btn-primary"><i class="ri-save-3-line align-bottom me-1"></i> Update</button>
                    </div>
                </div>
                <!--end col-->
            </div>

        </div>
    </div>
</div>
<!--end modal-->
<!-- removeItemModal -->
<div id="removeItemModal" class="modal fade zoomIn" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="btn-close"></button>
            </div>
            <div class="modal-body">
                <div class="mt-2 text-center">
                    <lord-icon src="https://cdn.lordicon.com/gsqxdxog.json" trigger="loop" colors="primary:#f7b84b,secondary:#f06548" style="width:100px;height:100px"></lord-icon>
                    <div class="mt-4 pt-2 fs-15 mx-4 mx-sm-5">
                        <h4>Are you sure ?</h4>
                        <p class="text-muted mx-4 mb-0">Are you sure you want to remove this Employee?</p>
                    </div>
                </div>
                <div class="d-flex gap-2 justify-content-center mt-4 mb-2">
                    <input type="text" id="hdnIDInput" hidden value="0" />
                    <button type="button" class="btn w-sm btn-light" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn w-sm btn-danger " onclick="fnDeleteRecord()" id="delete-product">Yes, Delete It!</button>
                </div>
            </div>

        </div>
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section scripts {


    <script>
        var datalist = [];


        checkAll = document.getElementById("checkAll"),
            perPage = (checkAll && (checkAll.onclick = function () {
                for (var e = document.querySelectorAll('.form-check-all input[type="checkbox"]'), t = document.querySelectorAll('.form-check-all input[type="checkbox"]:checked').length, a = 0; a < e.length; a++) e[a].checked = this.checked, e[a].checked ? e[a].closest("tr").classList.add("table-active") : e[a].closest("tr").classList.remove("table-active");
                document.getElementById("remove-actions").style.display = 0 < t ? "none" : "block"
            }), 5),
            editlist = !1,
            options = {
                valueNames: ["id", "EmpId", "EmpName", "EmpGender", "EmpDesignation", "EmpContactNo", "EmpEmailId", "isActive"], //, "status"
                page: perPage,
                pagination: !0,
                plugins: [ListPagination({
                    left: 2,
                    right: 2
                })]
            },
            empList = new List("empList", options).on("updated", function (e) {
                0 == e.matchingItems.length ? document.getElementsByClassName("noresult")[0].style.display = "block" : document.getElementsByClassName("noresult")[0].style.display = "none";
                var t = 1 == e.i,
                    a = e.i > e.matchingItems.length - e.page;
                document.querySelector(".pagination-prev.disabled") && document.querySelector(".pagination-prev.disabled").classList.remove("disabled"), document.querySelector(".pagination-next.disabled") && document.querySelector(".pagination-next.disabled").classList.remove("disabled"), t && document.querySelector(".pagination-prev").classList.add("disabled"), a && document.querySelector(".pagination-next").classList.add("disabled"), e.matchingItems.length <= perPage ? document.querySelector(".pagination-wrap").style.display = "none" : document.querySelector(".pagination-wrap").style.display = "flex", e.matchingItems.length == perPage && document.querySelector(".pagination.listjs-pagination").firstElementChild.children[0].click(), 0 < e.matchingItems.length ? document.getElementsByClassName("noresult")[0].style.display = "none" : document.getElementsByClassName("noresult")[0].style.display = "block"
            });
        const xhttp = new XMLHttpRequest;
        xhttp.onload = function () {
            var e = JSON.parse(this.responseText);
            console.log("Response Data:", this.responseText);
            datalist = e;
            Array.from(e).forEach(function (e) {
                empList.add({
                    id: e.id,
                    EmpId: e.empID,
                    EmpName: e.empName,
                    EmpGender: e.gender,
                    EmpDesignation: e.designation,
                    // EmpAddress: e.empaddress,
                    EmpContactNo: e.empcontactno,
                    EmpEmailId: e.emailid,
                    isActive: isStatus(e.isActive),
                }),
                    empList.sort("id", {
                        order: "desc"
                    })
            }), empList.remove("id", 'VZ01');

        }, xhttp.open("GET", "/api/EmployeeApi/"), xhttp.send();


        function fnOnSaveEmployee() {
            if ($("#AddEmpIDInput").val().length == 0 ||
                $("#AddEmpNameInput").val().length == 0 ||
                $("#AddDesignationInput").val().length == 0 ||               
                $("#AddEmailidInput").val().length == 0 ) {

                Swal.fire(
                    {
                        title: 'Employee Creation',
                        text: 'Please Fill all the details!',
                        icon: 'error',
                        showCancelButton: true,
                        confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                        cancelButtonClass: 'btn btn-danger w-xs mt-2',
                        buttonsStyling: false,
                        showCloseButton: true
                    }
                )
                return;
            }
            var employee = {
                EmpID: $("#AddEmpIDInput").val(),
                EmpName: $("#AddEmpNameInput").val(),
                Designation: $("#AddDesignationInput").val(),
                Gender: $("#AddGenderInput").val(),
                emailid: $("#AddEmailidInput").val(),
                IsActive:true
            }

            $.ajax({
                url: "/api/EmployeeApi",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(employee),
                beforeSend: function () {
                },
                success: function (data) {

                    if (data.status) {
                        $('#addEmployee').modal('hide');
                        Swal.fire(
                            {
                                title: 'Employee Creation',
                                text: data.message,
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                        // setTimeout(location.reload(true), 10000);
                    }
                    else {
                        Swal.fire(
                            {
                                title: 'Employee Creation',
                                text: data.message,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                    }

                },
                complete: function () {
                    location.reload(true)
                },
                error: function (e) {
                    console.log(e.responseText);
                }
            });
        }
        
        function fnAddNewEmployee() {
            debugger;
            $("#AddEmpIDInput").val("");
            $('#addEmployee').modal('show');
            fnClearAll();
            if (datalist.length > 0) {
                var empID = datalist[datalist.length - 1].empID;
                var Id1 = empID.replace('EMP', '');
                var LatestId = parseInt(Id1) + 1;
                $("#AddEmpIDInput").val("EMP" + LatestId);
            }
            else {
                var LatestId = 1;
                $("#AddEmpIDInput").val("EMP" + LatestId);
            }
        }
        
        function fnEditRecord(Id) {
            debugger;

            $("#hdnIDInput").val(Id);
            $('#btnUpdate').show();
           // $('#btnSave').hide();
            $('#exampleModalLabel').text("Update Employee");

            $.ajax({
                url: '/api/EmployeeApi/' + Id,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    //$('#divLoader').show();
                },
                success: function (data) {

                    // $('#addEmployee').modal('show');

                    console.log(data);
                    $("#EmpIDInput").val(data.empID);
                    $("#EmpNameInput").val(data.empName);
                    $("#GenderInput").val(data.gender);

                    setFlatpickrDate("DateofBirthInput", data.dateofBirth);
                    setFlatpickrDate("DateofJoiningInput", data.dateofJoining);
                    setFlatpickrDate("contractexpirydateInput",data.contractexpirydate);
                    setFlatpickrDate("DisconnectDateInput", data.disconnectDate);
             
                    // DateofBirth: DateofBirth,
                    $("#NationalityInput").val(data.nationality);
                    $("#EducationInput").val(data.education);
                    // DateofJoining: DateofJoining,
                    $("#DesignationInput").val(data.designation);
                    $("#DepNameInput").val(data.depName);
                    $("#TeamNameInput").val(data.teamName);
                    $("#ContracttypeInput").val(data.contracttype);
                    // contractexpirydate: contractexpirydate,
                    // DisconnectDate: DisconnectDate,
                    $("#workingforInput").val(data.workingfor);
                    $("#VisaFromInput").val(data.visaFrom);
                    $("#CostCatInput").val(data.costCat);
                    $("#EmpaddressInput").val(data.empaddress);
                    $("#EmpCityInput").val(data.empCity);
                    $("#EmpcontactnoInput").val(data.empcontactno);
                    $("#emailidInput").val(data.emailid);

                    $("#PeraddressInput").val(data.peraddress);
                    $("#PerCityInput").val(data.perCity);
                    $("#Percontactno1Input").val(data.percontactno1);
                    $("#Percontactno2Input").val(data.percontactno2);
                    $("#PeremailidInput").val(data.peremailid);

                    $("#RefNameInput").val(data.refName);
                    $("#RefAddressInput").val(data.refAddress);
                    $("#RefCityInput").val(data.refCity);
                    $("#employeenameInput").val(data.employeename);
                    $("#RefContactNo1Input").val(data.refContactNo1);
                    $("#RefContactNo2Input").val(data.refContactNo2);
                    $("#RefEmailidInput").val(data.refEmailid);
                    $("#RefNotesInput").val(data.refNotes);

                    $("#EmpPersonalIDInput").val(data.empPersonalID);
                    $("#bankcodeInput").val(data.bankcode);
                    $("#bankacnoInput").val(data.bankacno);
                    $("#BasicsalaryInput").val(data.basicsalary);
                    $("#rateperhourInput").val(data.rateperhour);
                    $("#SalaryTypeInput").val(data.salaryType);

                    $("#empbanknameInput").val(data.empbankname);
                    $("#empbankacnoInput").val(data.empbankacno);
                    $("#empbankbranchInput").val(data.empbankbranch);
                    $("#bankifsccodeInput").val(data.bankifsccode);
                    $("#bankmicrcodeInput").val(data.bankmicrcode);
                    $("#BarcodeInput").val(data.barcode);

                },
                complete: function (e) {
                },
                error: function (e) {
                    //$('body').removeClass('modal-open');
                    //$('.modal-backdrop').remove();
                    console.log(e.responseText);
                }
            });

        }
        
        function fnDeleteRecordPopup(Id) {
            debugger;
            $('#removeItemModal').modal('show');
            $("#hdnIDInput").val(Id);
        }
        
        function fnDeleteRecord() {
            debugger;
            var Id = $("#hdnIDInput").val();
            if (Id > 0) {
                $.ajax({
                    url: '/api/EmployeeApi/' + Id,
                    type: "DELETE",
                    dataType: 'json',
                    beforeSend: function () {
                        // $('#loader').show();
                    },
                    success: function (data) {
                        console.log(data);
                        Swal.fire(
                            {
                                title: 'Employee',
                                text: data.message,
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                    },
                    complete: function () {
                        location.reload(true)
                    },
                    error: function (e) {
                        // alert(e.responseText);

                        console.log(e.responseText);
                    }
                });

            }

        }
       
        document.querySelector(".pagination-next").addEventListener("click", function () {
            document.querySelector(".pagination.listjs-pagination") && document.querySelector(".pagination.listjs-pagination").querySelector(".active") && document.querySelector(".pagination.listjs-pagination").querySelector(".active").nextElementSibling.children[0].click()
        }), document.querySelector(".pagination-prev").addEventListener("click", function () {
            document.querySelector(".pagination.listjs-pagination") && document.querySelector(".pagination.listjs-pagination").querySelector(".active") && document.querySelector(".pagination.listjs-pagination").querySelector(".active").previousSibling.children[0].click()
        });
        function fnOnUpdateEmployee() {
            debugger;
            if ($("#EmpIDInput").val().length == 0 ||
                $("#EmpNameInput").val().length == 0 ||
                $("#DesignationInput").val().length == 0) {

                Swal.fire(
                    {
                        title: 'Employee Updation',
                        text: 'Please Fill all the details!',
                        icon: 'error',
                        showCancelButton: true,
                        confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                        cancelButtonClass: 'btn btn-danger w-xs mt-2',
                        buttonsStyling: false,
                        showCloseButton: true
                    }
                )
                return;
            }
            var DateofBirth = toTimestamp($("#DateofBirthInput").val());
            var DateofJoining = toTimestamp($("#DateofJoiningInput").val());
            var contractexpirydate = toTimestamp($("#contractexpirydateInput").val());
            var DisconnectDate = toTimestamp($("#DisconnectDateInput").val());

            var employee = {
                Id: $("#hdnIDInput").val(),
                EmpID: $("#EmpIDInput").val(),
                EmpName: $("#EmpNameInput").val(),
                Gender: $("#GenderInput").val(),
                DateofBirth: DateofBirth,
                Nationality: $("#NationalityInput").val(),
                Education: $("#EducationInput").val(),
                DateofJoining: DateofJoining,
                Designation: $("#DesignationInput").val(),
                DepName: $("#DepNameInput").val(),
                TeamName: $("#TeamNameInput").val(),
                Contracttype: $("#ContracttypeInput").val(),
                contractexpirydate: contractexpirydate,
                DisconnectDate: DisconnectDate,
                workingfor: $("#workingforInput").val(),
                VisaFrom: $("#VisaFromInput").val(),
                CostCat: $("#CostCatInput").val(),
                Empaddress: $("#EmpaddressInput").val(),
                EmpCity: $("#EmpCityInput").val(),
                Empcontactno: $("#EmpcontactnoInput").val(),
                emailid: $("#emailidInput").val(),

                Peraddress: $("#PeraddressInput").val(),
                PerCity: $("#PerCityInput").val(),
                Percontactno1: $("#Percontactno1Input").val(),
                Percontactno2: $("#Percontactno2Input").val(),
                Peremailid: $("#PeremailidInput").val(),

                RefName: $("#RefNameInput").val(),
                RefAddress: $("#RefAddressInput").val(),
                RefCity: $("#RefCityInput").val(),
                employeename: $("#employeenameInput").val(),
                RefContactNo2: $("#RefContactNo2Input").val(),
                RefContactNo1: $("#RefContactNo1Input").val(),
                RefEmailid: $("#RefEmailidInput").val(),
                RefNotes: $("#RefNotesInput").val(),

                EmpPersonalID: $("#EmpPersonalIDInput").val(),
                bankcode: $("#bankcodeInput").val(),
                bankacno: $("#bankacnoInput").val(),
                Basicsalary: $("#BasicsalaryInput").val(),
                rateperhour: $("#rateperhourInput").val(),
                SalaryType: $("#SalaryTypeInput").val(),

                empbankname: $("#empbanknameInput").val(),
                empbankacno: $("#empbankacnoInput").val(),
                empbankbranch: $("#empbankbranchInput").val(),
                bankifsccode: $("#bankifsccodeInput").val(),
                bankmicrcode: $("#bankmicrcodeInput").val(),
                barcode: $("#BarcodeInput").val(),
                IsActive: true,
            }

            $.ajax({
                url: "/api/EmployeeApi",
                type: "PUT",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(employee),
                beforeSend: function () { 
                }, 
                success: function (data) {

                    if (data.status) {
                        Swal.fire(
                            {
                                title: 'Employee',
                                text: data.message,
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                        $('#addEmployee').modal('hide');
                        $('#btnUpdate').hide();
                        $('#btnSave').show();
                        $('#exampleModalLabel').text("Create Account Group");

                        fnClearAll();
                        // setTimeout(location.reload(true), 10000);
                    }
                    else {
                        Swal.fire(
                            {
                                title: 'Employee',
                                text: data.message,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                    }

                },
                complete: function () {

                    // $('#divAlert').hide();
                    // $('#SampleModal').modal('hide');
                    location.reload(true)
                },
                error: function (e) {
                    console.log(e.responseText);
                }
            });
        }
        
        function fnClearAll() {
            $("#EmpNameInput").val("");
            $("#GenderInput").val("");
            // DateofBirth: DateofBirth,
            $("#NationalityInput").val("");
            $("#EducationInput").val("");
            // DateofJoining: DateofJoining,
            $("#DesignationInput").val("");
            $("#DepNameInput").val("");
            $("#TeamNameInput").val("");
            $("#ContracttypeInput").val("");
            // contractexpirydate: contractexpirydate,
            // DisconnectDate: DisconnectDate,
            $("#workingforInput").val("");
            $("#VisaFromInput").val("");
            $("#CostCatInput").val("");
            $("#EmpaddressInput").val("");
            $("#EmpCityInput").val("");
            $("#EmpcontactnoInput").val("");
            $("#emailidInput").val("");

            $("#PeraddressInput").val("");
            $("#PerCityInput").val("");
            $("#Percontactno1Input").val("");
            $("#Percontactno2Input").val("");
            $("#PeremailidInput").val("");

            $("#RefNameInput").val("");
            $("#RefAddressInput").val("");
            $("#RefCityInput").val("");
            $("#employeenameInput").val("");
            $("#RefContactNo2Input").val("");
            $("#RefEmailidInput").val("");
            $("#RefNotesInput").val("");

            $("#EmpPersonalIDInput").val("");
            $("#bankcodeInput").val("");
            $("#bankacnoInput").val("");
            $("#BasicsalaryInput").val("");
            $("#rateperhourInput").val("");
            $("#SalaryTypeInput").val("");

            $("#empbanknameInput").val("");
            $("#empbankacnoInput").val("");
            $("#empbankbranchInput").val("");
            $("#bankifsccodeInput").val("");
            $("#bankmicrcodeInput").val("");

        }
       
        function validateEmail(email) {

            try {
                // Create an input element
                var input = document.createElement('input');
                input.type = 'email';
                input.value = email;

                // Attempt to set the input's value to the provided email
                // If it's not a valid email, this will throw an error
                return input.checkValidity();
            } catch (error) {
                return false;
            }
        }
       
        function toTimestamp(strDate) {
            var datum = new Date(strDate).toLocaleDateString();//Date.parse(strDate);
            if (datum == 'Invalid Date') {
                datum = null;
            }
            return datum;// datum/1000;
        } 
       
        function deleteMultiple() {
            let checkboxes = document.querySelectorAll('.form-check-input:checked');
            let ids_array = [];

            checkboxes.forEach(checkbox => {
                // Traverse to the parent row and find the element containing the ID
                let row = checkbox.closest('tr'); // Get the parent row of the checkbox
                if (row) {
                    let idColumn = row.querySelector('.id');
                    if (idColumn) {
                        let idValue = idColumn.textContent.trim();
                        ids_array.push(idValue);
                    }
                }
            });

            // Check if at least one ID was selected
            if (ids_array.length > 0) {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn btn-primary w-xs me-2 mt-2",
                    cancelButtonClass: "btn btn-danger w-xs mt-2",
                    confirmButtonText: "Yes, delete it!",
                    buttonsStyling: false,
                    showCloseButton: true
                }).then(function (result) {
                    if (result.isConfirmed) { // Changed from result.value to result.isConfirmed
                        // Make an API call to delete the items on the backend
                        $.ajax({
                            url: "/api/EmployeeApi", // Ensure this is the correct endpoint for your DELETE request
                            type: "DELETE",
                            contentType: "application/json; charset=utf-8",
                            data: JSON.stringify({ ids: ids_array }), // Sending the IDs to be deleted as JSON
                            success: function (data) {
                                if (data.success) {
                                    // Show the success alert before reloading
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Your data has been deleted.",
                                        icon: "success",
                                        confirmButtonClass: "btn btn-info w-xs mt-2",
                                        buttonsStyling: false
                                    }).then(() => {
                                        // Reload the page after displaying the success message
                                        location.reload();
                                    });
                                } else {
                                    // Handle deletion failure
                                    Swal.fire({
                                        title: "Error",
                                        text: "Failed to delete items on the server.",
                                        icon: "error",
                                        confirmButtonClass: "btn btn-danger w-xs mt-2",
                                        buttonsStyling: false
                                    });
                                }
                            },
                            error: function (xhr, status, error) {
                                // Handle any network or other errors
                                Swal.fire({
                                    title: "Error",
                                    text: "An error occurred while deleting items.",
                                    icon: "error",
                                    confirmButtonClass: "btn btn-danger w-xs mt-2",
                                    buttonsStyling: false
                                });
                                console.error('Error:', error);
                            }
                        });

                        // Optional UI updates before confirmation from the server
                        // Commented out this section to avoid pre-emptive row removal
                        // document.getElementById("remove-actions").style.display = "none";
                        // document.getElementById("checkAll").checked = false;
                    }
                });
            } else {
                Swal.fire({
                    title: "Please select at least one checkbox",
                    icon: "info",
                    confirmButtonClass: "btn btn-info",
                    buttonsStyling: false,
                    showCloseButton: true
                });
            }
        }

        function setFlatpickrDate(inputId, dateString) {
            const dateInput = document.querySelector(`#${inputId}`);
            if (dateInput && dateString) {
                // Parse date string to create a valid Date object
                const date = new Date(dateString);

                if (!isNaN(date)) {
                    // Check if Flatpickr is already initialized
                    if (dateInput._flatpickr) {
                        dateInput._flatpickr.setDate(date, true);
                    } else {
                        console.error(`Flatpickr instance not found for input with ID: ${inputId}`);
                    }
                } else {
                    console.error(`Invalid date format for input with ID: ${inputId}`);
                }
            } else if (dateInput) {
                dateInput._flatpickr.clear(); // Clear the date if dateString is not valid
            } else {
                console.error(`Input with ID: ${inputId} not found`);
            }
        }
        function isStatus(e) {
            switch (e) {
                case true:
                    return '<span class="badge bg-success-subtle text-success text-uppercase">Active</span>';
                case false:
                    return '<span class="badge bg-danger-subtle text-danger text-uppercase">Inactive</span>';

            }
        }



       







        //Previous Code
        function fnAddNewEmployeeOld() {
            $("#EmpIDInput").val("");
            $('#addEmployee').modal('show');
            fnClearAll();
            if (datalist.length > 0) {
                var empID = datalist[datalist.length - 1].empID;
                var Id1 = empID.replace('EMP', '');
                var LatestId = parseInt(Id1) + 1;
                $("#EmpIDInput").val("EMP" + LatestId);
            }
            else {
                var LatestId = 1;
                $("#EmpIDInput").val("EMP" + LatestId);
            }
        }
        function fngetEmployeelist() {
            $.ajax({
                url: '/api/EmployeeApi/',
                beforeSend: function () {
                    // $('#loader').show();
                    // $('#loaderTop').show();
                },
                success: function (data) {
                    datalist = data;
                    if (data.length > 0) {
                        var empID = data[data.length - 1].empID;
                        var Id1 = empID.replace('EMP', '');
                        var LatestId = parseInt(Id1) + 1;
                        $("#EmpIDInput").val("EMP" + LatestId);
                    }
                    else {
                        var LatestId = 1;
                        $("#EmpIDInput").val("EMP" + LatestId);
                    }
                    const Mainarray = [];
                    data.forEach(function (category) {
                        const arr = [];
                        arr.push(category.id);
                        arr.push(category.empID);
                        arr.push(category.empName);
                        arr.push(category.gender);
                        arr.push(category.designation);
                        arr.push(category.empaddress);
                        arr.push(category.empcontactno);
                        arr.push(category.emailid);
                        Mainarray.push(arr);
                    });

                    new gridjs.Grid({
                        columns: [
                            {
                                name: 'ID',
                                formatter: (function (cell) {
                                    return gridjs.html('' + cell + '');
                                })
                            },
                            {
                                name: 'Employee ID',
                                width: '150px',
                            },
                            {
                                name: 'Employee Name',
                                width: '200px',
                            },
                            {
                                name: 'Gender',
                                width: '130px',
                            },
                            {
                                name: 'Designation',
                                width: '200px',
                            },
                            {
                                name: 'Address',
                                width: '200px',
                            },
                            {
                                name: 'Contact No.',
                                width: '150px',
                            },
                            {
                                name: 'Email ID',
                                formatter: (function (cell) {
                                    return gridjs.html('' + cell + '');
                                })
                            },
                            {
                                name: 'Actions',
                                width: '120px',
                                width: '120px',
                                formatter: function (e, t) {
                                    return gridjs.html('<ul class="list-inline hstack gap-2 mb-0"><li class="list-inline-item edit" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" aria-label="Edit" data-bs-original-title="Edit"><a href="#" onclick="fnEditRecord(' + t._cells[0].data + ')" data-id=' + t._cells[0].data + ' class="text-primary d-inline-block edit-item-btn"><i class="ri-pencil-fill fs-16"></i></a> </li><li class="list-inline-item" data-bs-toggle="tooltip" data-bs-trigger="hover" data-bs-placement="top" aria-label="Remove" data-bs-original-title="Remove"><a class="text-danger d-inline-block remove-item-btn"data-id=' + t._cells[0].data + ' onclick="fnDeleteRecordPopup(' + t._cells[0].data + ')"  href="#"><i class="ri-delete-bin-5-fill fs-16"></i></a> </li></ul>')
                                }
                            },
                        ],
                        pagination: {
                            limit: 10
                        },
                        sort: true,
                        search: false,
                        data: Mainarray,
                    }).render(document.getElementById("employeetable-gridjs"));
                    $('.gridjs-head').hide();

                    // $('#loader').hide();
                    // $('#loaderTop').hide();
                },
                error: function (e) {
                    // alert(e.responseText);
                    // $('#loader').hide();
                    console.log(e.responseText);
                },
                complete: function () {
                    // $('#loader').hide();
                }
            });

        }
        function fnOnSaveEmployeeOld() {

            var DateofBirth = toTimestamp($("#DateofBirthInput").val());
            var DateofJoining = toTimestamp($("#DateofJoiningInput").val());
            var contractexpirydate = toTimestamp($("#contractexpirydateInput").val());
            var DisconnectDate = toTimestamp($("#DisconnectDateInput").val());

            var employee = {
                EmpID: $("#EmpIDInput").val(),
                EmpName: $("#EmpNameInput").val(),
                Gender: $("#GenderInput").val(),
                DateofBirth: DateofBirth,
                Nationality: $("#NationalityInput").val(),
                Education: $("#EducationInput").val(),
                DateofJoining: DateofJoining,
                Designation: $("#DesignationInput").val(),
                DepName: $("#DepNameInput").val(),
                TeamName: $("#TeamNameInput").val(),
                Contracttype: $("#ContracttypeInput").val(),
                contractexpirydate: contractexpirydate,
                DisconnectDate: DisconnectDate,
                workingfor: $("#workingforInput").val(),
                VisaFrom: $("#VisaFromInput").val(),
                CostCat: $("#CostCatInput").val(),
                Empaddress: $("#EmpaddressInput").val(),
                EmpCity: $("#EmpCityInput").val(),
                Empcontactno: $("#EmpcontactnoInput").val(),
                emailid: $("#emailidInput").val(),

                Peraddress: $("#PeraddressInput").val(),
                PerCity: $("#PerCityInput").val(),
                Percontactno1: $("#Percontactno1Input").val(),
                Percontactno2: $("#Percontactno2Input").val(),
                Peremailid: $("#PeremailidInput").val(),

                RefName: $("#RefNameInput").val(),
                RefAddress: $("#RefAddressInput").val(),
                RefCity: $("#RefCityInput").val(),
                employeename: $("#employeenameInput").val(),
                RefContactNo2: $("#RefContactNo2Input").val(),
                RefEmailid: $("#RefEmailidInput").val(),
                RefNotes: $("#RefNotesInput").val(),

                EmpPersonalID: $("#EmpPersonalIDInput").val(),
                bankcode: $("#bankcodeInput").val(),
                bankacno: $("#bankacnoInput").val(),
                Basicsalary: $("#BasicsalaryInput").val(),
                rateperhour: $("#rateperhourInput").val(),
                SalaryType: $("#SalaryTypeInput").val(),

                empbankname: $("#empbanknameInput").val(),
                empbankacno: $("#empbankacnoInput").val(),
                empbankbranch: $("#empbankbranchInput").val(),
                bankifsccode: $("#bankifsccodeInput").val(),
                bankmicrcode: $("#bankmicrcodeInput").val(),
            }

            $.ajax({
                url: "/api/EmployeeApi",
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(employee),
                beforeSend: function () {
                    // $('#divAlert').show();
                },
                //success: function (data, jqXHR) {
                success: function (data) {

                    if (data.status) {
                        $('#addEmployee').modal('hide');
                        Swal.fire(
                            {
                                title: 'Employee Creation',
                                text: data.message,
                                icon: 'success',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                        // setTimeout(location.reload(true), 10000);
                    }
                    else {
                        Swal.fire(
                            {
                                title: 'Employee Creation',
                                text: data.message,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonClass: 'btn btn-primary w-xs me-2 mt-2',
                                cancelButtonClass: 'btn btn-danger w-xs mt-2',
                                buttonsStyling: false,
                                showCloseButton: true
                            }
                        )
                    }

                },
                complete: function () {

                    // $('#divAlert').hide();
                    // $('#SampleModal').modal('hide');
                    // location.reload(true)
                },
                error: function (e) {
                    console.log(e.responseText);
                }
            });
        }
        function fnEditRecordOld(Id) {
            debugger;

            $("#hdnIDInput").val(Id);

            $('#btnUpdate').show();
            $('#btnSave').hide();
            $('#exampleModalLabel').text("Update Employee");

            $.ajax({
                url: '/api/EmployeeApi/' + Id,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                beforeSend: function () {
                    //$('#divLoader').show();
                },
                success: function (data) {

                    $('#addEmployee').modal('show');

                    console.log(data);
                    $("#EmpIDInput").val(data.empID);
                    $("#EmpNameInput").val(data.empName);
                    $("#GenderInput").val(data.gender);
                    // DateofBirth: DateofBirth,
                    $("#NationalityInput").val(data.nationality);
                    $("#EducationInput").val(data.education);
                    // DateofJoining: DateofJoining,
                    $("#DesignationInput").val(data.designation);
                    $("#DepNameInput").val(data.depName);
                    $("#TeamNameInput").val(data.teamName);
                    $("#ContracttypeInput").val(data.contracttype);
                    // contractexpirydate: contractexpirydate,
                    // DisconnectDate: DisconnectDate,
                    $("#workingforInput").val(data.workingfor);
                    $("#VisaFromInput").val(data.visaFrom);
                    $("#CostCatInput").val(data.costCat);
                    $("#EmpaddressInput").val(data.empaddress);
                    $("#EmpCityInput").val(data.empCity);
                    $("#EmpcontactnoInput").val(data.empcontactno);
                    $("#emailidInput").val(data.emailid);

                    $("#PeraddressInput").val(data.peraddress);
                    $("#PerCityInput").val(data.perCity);
                    $("#Percontactno1Input").val(data.percontactno1);
                    $("#Percontactno2Input").val(data.percontactno2);
                    $("#PeremailidInput").val(data.peremailid);

                    $("#RefNameInput").val(data.refName);
                    $("#RefAddressInput").val(data.refAddress);
                    $("#RefCityInput").val(data.refCity);
                    $("#employeenameInput").val(data.employeename);
                    $("#RefContactNo2Input").val(data.refContactNo2);
                    $("#RefEmailidInput").val(data.refEmailid);
                    $("#RefNotesInput").val(data.refNotes);

                    $("#EmpPersonalIDInput").val(data.empPersonalID);
                    $("#bankcodeInput").val(data.bankcode);
                    $("#bankacnoInput").val(data.bankacno);
                    $("#BasicsalaryInput").val(data.basicsalary);
                    $("#rateperhourInput").val(data.rateperhour);
                    $("#SalaryTypeInput").val(data.salaryType);

                    $("#empbanknameInput").val(data.empbankname);
                    $("#empbankacnoInput").val(data.empbankacno);
                    $("#empbankbranchInput").val(data.empbankbranch);
                    $("#bankifsccodeInput").val(data.bankifsccode);
                    $("#bankmicrcodeInput").val(data.bankmicrcode);

                },
                complete: function (e) {
                },
                error: function (e) {
                    //$('body').removeClass('modal-open');
                    //$('.modal-backdrop').remove();
                    console.log(e.responseText);
                }
            });

        }
    </script>



}